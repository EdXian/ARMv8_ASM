typedef unsigned char  u8;
typedef unsigned short u16;
typedef unsigned int   u32;

/*
UART0 base address: 0x101f1000;
UART1 base address: 0x101f2000;
UART2 base address: 0x101f3000;
UART3 base address: 0x10009000;

// flag register at 0x18
//  7    6    5    4    3    2   1   0
// TXFE RXFF TXFF RXFE BUSY
// TX FULL : 0x20
// TX empty: 0x80
// RX FULL : 0x40
// RX empty: 0x10
// BUSY=1 :  0x08
*/
int N;
int v[] = {1,2,3,4,5,6,7,8,9,10};
int sum;

typedef volatile struct uart{
  u32 DR;                  // data reg
  u32 DSR;  u8  reserverd[16];
  u32 FR;                 // flag reg at 0x18
}UART;

volatile UART *upp[4];    // 3 UART pointers to their base addresses
UART *up;

char *tab = "0123456789ABCDEF";

#include "string.c"
#include "uart.c"

int main()
{
  int i; char string[32]; 
  char line[128]; 
  int size = sizeof(int);
  N = 10;

  uart_init();

  up = upp[0];
  uputs(up, "enter lines from UART terminal, enter quit to exit\n\r");
  
  while(1){
    ugets(up, string);
    uputs(up, "    ");
    if (strcmp(string, "quit")==0)
       break;
    uputs(up, string);
    uputs(up, "\n\r");
  }

  uprints(up, "\n\rcompute sum of array\n\r");
  sum = 0;
  for (i=0; i<N; i++)
    sum += v[i];
  uputs(up, "sum = ");
  uputc(up, (sum / 10) + '0');
  uputc(up, (sum % 10) + '0');
  uputs(up, "\n\rEND OF UART DEMO\n\r");
  uputs(up, "Enter Control-a, then x to exit QEMU\n\r");

}
